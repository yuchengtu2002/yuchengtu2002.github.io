{"ast":null,"code":"var _jsxFileName = \"/Users/johnson/tech-resume/src/components/Project.jsx\";\nimport React from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Project() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"project\",\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"project-heading\",\n      children: \"My Past Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-cards\",\n      children: [\n      // Modify or add project cards here\n      // To add a new card, copy the entire object enclosed by {}, modify the string content; separate each object with a comma.\n      {\n        img: \"hrca_project.png\",\n        title: \"HRCA Machine-Learning Research Project\",\n        time: \"2024.5 - 2024.9\",\n        descriptions: [\"Integrated PyTorch and machine learning models that are capable of classifying swallowing events as normal or abnormal, then quantifying swallowing severity on a scalable metric\", \"Created a user-friendly PC application using Python and the PyQt framework to connect with the HRCA device for real-time monitoring and analysis of swallowing signals\"],\n        tags: [\"C++\", \"Python\", \"PyQt\", \"Scikit-learn\", \"Machine Learning\", \"PyTorth\", \"GUI Design\"]\n      }, {\n        img: \"ece297.png\",\n        title: \"Geographic Information System - Map Application\",\n        time: \"2024.1 - 2024.4\",\n        descriptions: [\"This is a part of a group project for ECE297: Communication and Design.\", \"In a group of 3, developed a OpenStreetMap-based map application using C++ and Glade framework, supporting features such as searching and routing\", \"Took the\"],\n        tags: [\"Javascript\", \"React\", \"RESTful API\", \"ExpressJS\", \"MongoDB\", \"Mongoose\"]\n      }, {\n        img: \"project3.jpg\",\n        title: \"操作系统之自定文件系统\",\n        time: \"20XX年X月 - 20XX年X月\",\n        descriptions: [\"借助用户空间文件系统（FUSE），通过C语言实现一个客制化文件系统。支持常用Linux文件操作命令，包括 ls，touch，echo，cat，truncate，rm，mkdir，以及rmdir。\"],\n        tags: [\"C\", \"Operating System\"]\n      }, {\n        img: \"project4.jpg\",\n        title: \"简单的路由实现\",\n        time: \"20XX年X月 - 20XX年X月\",\n        descriptions: [\"基于Mininet仿真静态路由表实现一个简单的路由器，支持接收原始以太网帧，处理数据包并将数据包转发到正确的传出接口。\"],\n        tags: [\"C\", \"Computer Network\"]\n      }].map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(ProjectCard, {\n          img: item.img,\n          title: item.title,\n          time: item.time,\n          descriptions: item.descriptions,\n          tags: item.tags\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","ProjectCard","jsxDEV","_jsxDEV","Project","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","img","title","time","descriptions","tags","map","item","index","_c","$RefreshReg$"],"sources":["/Users/johnson/tech-resume/src/components/Project.jsx"],"sourcesContent":["import React from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport \"./style.css\";\n\nexport default function Project() {\n  return (\n    <div\n      id=\"project\"\n      className=\"project-container\"\n    >\n      <h2 className=\"project-heading\">\n        My Past Projects\n      </h2>\n\n      <div className=\"project-cards\">\n        {[\n          // Modify or add project cards here\n          // To add a new card, copy the entire object enclosed by {}, modify the string content; separate each object with a comma.\n          {\n            img: \"hrca_project.png\",\n            title: \"HRCA Machine-Learning Research Project\",\n            time: \"2024.5 - 2024.9\",\n            descriptions: [\n              \"Integrated PyTorch and machine learning models that are capable of classifying swallowing events as normal or abnormal, then quantifying swallowing severity on a scalable metric\",\n              \"Created a user-friendly PC application using Python and the PyQt framework to connect with the HRCA device for real-time monitoring and analysis of swallowing signals\",\n            ],\n            tags: [\n              \"C++\",\n              \"Python\",\n              \"PyQt\",\n              \"Scikit-learn\",\n              \"Machine Learning\",\n              \"PyTorth\",\n              \"GUI Design\",\n\n            ],\n          },\n          {\n            img: \"ece297.png\",\n            title: \"Geographic Information System - Map Application\",\n            time: \"2024.1 - 2024.4\",\n            descriptions: [\n              \"This is a part of a group project for ECE297: Communication and Design.\",\n              \"In a group of 3, developed a OpenStreetMap-based map application using C++ and Glade framework, supporting features such as searching and routing\",\n              \"Took the\",\n            ],\n            tags: [\n              \"Javascript\",\n              \"React\",\n              \"RESTful API\",\n              \"ExpressJS\",\n              \"MongoDB\",\n              \"Mongoose\",\n            ],\n          },\n          {\n            img: \"project3.jpg\",\n            title: \"操作系统之自定文件系统\",\n            time: \"20XX年X月 - 20XX年X月\",\n            descriptions: [\n              \"借助用户空间文件系统（FUSE），通过C语言实现一个客制化文件系统。支持常用Linux文件操作命令，包括 ls，touch，echo，cat，truncate，rm，mkdir，以及rmdir。\",\n            ],\n            tags: [\"C\", \"Operating System\"],\n          },\n          {\n            img: \"project4.jpg\",\n            title: \"简单的路由实现\",\n            time: \"20XX年X月 - 20XX年X月\",\n            descriptions: [\n              \"基于Mininet仿真静态路由表实现一个简单的路由器，支持接收原始以太网帧，处理数据包并将数据包转发到正确的传出接口。\",\n            ],\n            tags: [\"C\", \"Computer Network\"],\n          },\n        ].map((item, index) => {\n          return (\n            <ProjectCard\n              key={index}\n              img={item.img}\n              title={item.title}\n              time={item.time}\n              descriptions={item.descriptions}\n              tags={item.tags}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,oBACED,OAAA;IACEE,EAAE,EAAC,SAAS;IACZC,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAE7BJ,OAAA;MAAIG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAEhC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELR,OAAA;MAAKG,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B;MACC;MACA;MACA;QACEK,GAAG,EAAE,kBAAkB;QACvBC,KAAK,EAAE,wCAAwC;QAC/CC,IAAI,EAAE,iBAAiB;QACvBC,YAAY,EAAE,CACZ,mLAAmL,EACnL,wKAAwK,CACzK;QACDC,IAAI,EAAE,CACJ,KAAK,EACL,QAAQ,EACR,MAAM,EACN,cAAc,EACd,kBAAkB,EAClB,SAAS,EACT,YAAY;MAGhB,CAAC,EACD;QACEJ,GAAG,EAAE,YAAY;QACjBC,KAAK,EAAE,iDAAiD;QACxDC,IAAI,EAAE,iBAAiB;QACvBC,YAAY,EAAE,CACZ,yEAAyE,EACzE,mJAAmJ,EACnJ,UAAU,CACX;QACDC,IAAI,EAAE,CACJ,YAAY,EACZ,OAAO,EACP,aAAa,EACb,WAAW,EACX,SAAS,EACT,UAAU;MAEd,CAAC,EACD;QACEJ,GAAG,EAAE,cAAc;QACnBC,KAAK,EAAE,aAAa;QACpBC,IAAI,EAAE,mBAAmB;QACzBC,YAAY,EAAE,CACZ,mGAAmG,CACpG;QACDC,IAAI,EAAE,CAAC,GAAG,EAAE,kBAAkB;MAChC,CAAC,EACD;QACEJ,GAAG,EAAE,cAAc;QACnBC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,mBAAmB;QACzBC,YAAY,EAAE,CACZ,6DAA6D,CAC9D;QACDC,IAAI,EAAE,CAAC,GAAG,EAAE,kBAAkB;MAChC,CAAC,CACF,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACrB,oBACEhB,OAAA,CAACF,WAAW;UAEVW,GAAG,EAAEM,IAAI,CAACN,GAAI;UACdC,KAAK,EAAEK,IAAI,CAACL,KAAM;UAClBC,IAAI,EAAEI,IAAI,CAACJ,IAAK;UAChBC,YAAY,EAAEG,IAAI,CAACH,YAAa;UAChCC,IAAI,EAAEE,IAAI,CAACF;QAAK,GALXG,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMX,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,EAAA,GApFuBhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}